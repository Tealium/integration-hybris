/**
 *
 */
package com.tealium.addon.events.impl;

/*
 * Hybris Platform dependencies.
 * Leverages commerce events and model
 */
import de.hybris.platform.core.model.order.OrderModel;
import de.hybris.platform.servicelayer.event.ClusterAwareEvent;
import de.hybris.platform.servicelayer.event.events.AbstractEvent;
import de.hybris.platform.util.Config;//this needs to exist in the hybris platform.util

//local tealium updates
import com.tealium.addon.utils.TealiumAddonConfigProperties; //needs assignments


/**
 * @author danielWilliamShields class TealiumOrderPlacedEvent - listener for when an order is created in the commerce
 *         platform depends on availability of servicelayer
 */
public class TealiumAddonOrderPlacedEvent extends AbstractEvent implements ClusterAwareEvent
{
	/*
	 * (non-Javadoc)
	 *
	 * @see de.hybris.platform.servicelayer.event.ClusterAwareEvent#publish(int, int)
	 */
	@Override
	public boolean publish(final int sourceLoc, final int targetLoc) //generated by error
	{
		final boolean groupingIsEnabled = Config.getBoolean(TealiumAddonConfigProperties.TEALIUM_EVENTS_GROUPING_ENABLED, false);
		// YTODO Auto-generated method stub
		if (!groupingIsEnabled)
		{
			//needs alternative case
			return true;
		}
		final int groupingInbound = Config.getInt(TealiumAddonConfigProperties.TEALIUM_EVENTS_GROUPING_INBOUND, originID);
		final int groupingOutbound = Config.getInt(TealiumAddon.ConfigProperties.TEALIUM_EVENTS_GROUPING_OUTBOUND, outboundTarget);
		if (originID == groupingInbound && outboundTarget == groupingInbound)
		{
			return true;
		}
		///keep publish open
	}//publish close

	//public method to get order
	@Override
	public OrderModel getSource()
	{
		return source;
	}

}///class close
